0000 TestBugs.testOpWithOperandsResultAndIRS
0001 bb10 3015 9018 ffff ffff ffff
0004 00000005 07000000
0004 00000006 00000000
0002 00000007
000F 00000006 9f800000
0000 TestCmp.testEqualExpectTrue
0001 bb10 d014 9028 ffff ffff ffff
0004 00000005 98800000
0004 0000000a 00000000
0002 00000005
000F 0000000a 98800000
0000 TestCmp.testEqualExpectFalse
0001 bb10 d014 9028 ffff ffff ffff
0004 00000005 00000000
0004 0000000a 00000000
0002 00000005
000F 0000000a 00000000
0000 TestCmp.testNotEqualExpectTrue
0001 bb10 d015 9028 ffff ffff ffff
0004 00000005 07000000
0004 0000000a 00000000
0002 00000005
000F 0000000a 98800000
0000 TestCmp.testNotEqualExpectFalse
0001 bb10 d015 9028 ffff ffff ffff
0004 00000005 98800000
0004 0000000a 00000000
0002 00000005
000F 0000000a 00000000
0000 TestCmp.testLessEqualExpectTrue
0001 bb10 d017 9028 ffff ffff ffff
0004 00000005 07000000
0004 0000000a 00000000
0002 00000005
000F 0000000a 98800000
0000 TestCmp.testLessEqualWithBothOperandsEqualExpectTrue
0001 bb10 d017 9028 ffff ffff ffff
0004 00000005 98800000
0004 0000000a 00000000
0002 00000005
000F 0000000a 98800000
0000 TestCmp.testLessEqualExpectFalse
0001 b310 d017 9028 ffff ffff ffff
0004 00000005 03000000
0004 0000000a 00000000
0002 00000005
000F 0000000a 00000000
0000 TestCmp.testLessThanExpectTrue
0001 bb10 d016 9028 ffff ffff ffff
0004 00000005 07000000
0004 0000000a 00000000
0002 00000005
000F 0000000a 98800000
0000 TestCmp.testLessThanWithBothOperandsEqualExpectFalse
0001 bb10 d016 9028 ffff ffff ffff
0004 00000005 98800000
0004 0000000a 00000000
0002 00000005
000F 0000000a 00000000
0000 TestCmp.testLessThanExpectFalse
0001 b310 d016 9028 ffff ffff ffff
0004 00000005 07000000
0004 0000000a 00000000
0002 00000005
000F 0000000a 00000000
0000 TestCmp.testBlockAddrIncIfCondNotMet
0001 b140 f004 b020 d014 f090 b3c0 f080 ffff ffff ffff
0004 00000005 1e000000
0004 0000000b 00000000
0002 00000009
000F 0000000a 1e000000
000F 0000000b 00000000
0000 TestGoto.testSimpleForwardJump
0001 b140 f004 a011 f090 bb10 f090 b0e0 f080 ffff ffff ffff
0004 0000000a 00000000
0002 00000009
000F 0000000a 07000000
0000 TestGoto.testSimpleBackwardJump
0001 b140 f004 b0e0 f080 bb10 aff9 f090 b0e0 f080 ffff ffff ffff
0004 0000000a 00000000
0004 0000000b 00000000
0002 0000000c
000F 0000000a 98800000
000F 0000000b 00000000
0000 TestGoto.testConditionalGotoWithConditionIsTrue
0001 b140 f004 d014 a009 f090 b3e0 f080 ffff ffff ffff
0004 00000005 0a000000
0004 0000000a 00000000
0002 0000000a
000F 0000000a 1f000000
0000 TestGoto.testConditionalGotoWithConditionIsFalse
0001 b140 f004 d014 a015 f090 f080 ffff ffff b120 f080 ffff ffff ffff
0004 00000005 09000000
0004 0000000a 00000000
0004 0000000b 00000000
0002 0000000a
000F 0000000a 0a000000
000F 0000000b 0a000000
0000 TestGotoAbs.test_that_goto_with_abs_addr_works
0001 b140 f004 b0c0 a000 bb10 f090 b160 f080 ffff ffff ffff
0004 0000000a 00000000
0002 0000000b
000F 0000000a 0b000000
0000 TestGotoAbs.test_that_goto_flushes_pipeline_and_prevent_addr_inc
0001 b140 f004 b0a0 a000 f090 b160 f080 ffff ffff ffff
0004 0000000a 00000000
0002 0000000a
000F 0000000a 0b000000
0000 TestIRS.test_that_irs_addr_is_changed
0001 b0e0 9028 b1e0 f044 b0e0 9028 ffff ffff ffff
0004 0000000a 00000000
0004 00000019 00000000
0002 00000008
000F 0000000a 07000000
000F 00000019 07000000
0000 TestIRS.test_that_irs_addr_is_changed_with_big_value
0001 b0e0 9028 b43e f044 b0e0 9028 ffff ffff ffff
0004 0000000a 00000000
0004 000001fa 00000000
0002 00000008
000F 0000000a 07000000
000F 000001fa 07000000
0000 TestIRS.test_that_irs_access_after_irs_changed_is_stalled
0001 b0e0 f004 b43e f044 802b f080 ffff ffff ffff
0004 0000000a 0b000000
0004 000001fa 16000000
0002 00000009
000F 00000007 16000000
0000 TestLoad.Load0
0001 bb10 9028 ffff ffff ffff
0002 00000004
000F 0000000a 98800000
0000 TestLoad.Load1
0001 bc04 b400 9028 ffff ffff ffff
0002 00000005
000F 0000000a a0240000
0000 TestLoad.Load2
0001 b8af be40 b0f7 9028 ffff ffff ffff
0002 00000006
000F 0000000a c57e40f7
0000 TestLoop.test_that_minimal_overhead_loop_works
0001 b180 f004 b1a0 f140 b000 c051 affd 9028 ffff ffff ffff
0004 0000000c 05000000
0004 0000000d 06000000
0004 0000000e 07000000
0004 0000000f 08000000
0004 00000010 09000000
0004 00000011 0a000000
0004 00000012 0b000000
0004 00000013 0c000000
0004 00000014 0d000000
0004 00000015 0e000000
0004 00000016 0f000000
0004 00000017 10000000
0004 00000018 11000000
0002 0000004c
000F 0000000a 208f0000
0000 TestLoop.test_that_minimal_overhead_with_param_zero_executes_once
0001 b180 f004 b000 f140 b000 c051 affd 9028 ffff ffff ffff
0004 0000000c 01000000
0002 0000000b
000F 0000000a 01000000
0000 TestMemXMov.test_that_mov_to_Result_from_AD1_works
0001 b47d b000 f024 f066 9014 ffff ffff ffff
0004 000003e8 1f800000
0004 00000005 00000000
0002 00000008
0000 TestMemXMov.test_that_mov_to_AD1_from_Result_works
0001 b47d b000 f024 b3f0 f085 ffff ffff ffff
0004 000003e8 00000000
0002 00000007
000F 000003e8 1f800000
0000 TestMemXMov.test_that_mov_to_Result_from_AD1_with_inc_works
0001 b47d b000 f024 f076 f085 9014 ffff ffff ffff
0004 00000005 00000000
0004 000003e8 1f800000
0004 000003e9 00000000
0002 00000009
000F 00000005 1f800000
000F 000003e9 1f800000
0000 TestMemXMov.test_that_mov_to_AD1_from_Result_with_inc_works
0001 b47d b000 f024 b3f0 f095 f085 ffff ffff ffff
0004 000003e8 00000000
0004 000003e9 00000000
0002 00000009
000F 000003e8 1f800000
000F 000003e9 1f800000
0000 TestMemXMov.test_that_mov_to_Result_from_AD1_stalls_while_external_write_is_in_progress
0001 b47d b000 f024 b3f0 f095 f066 9014 ffff ffff ffff
0004 00000005 00000000
0004 000003e8 00000000
0004 000003e9 87000000
0002 0000000a
000F 000003e8 1f800000
000F 00000005 87000000
0000 TestMemXMov.test_that_mov_to_Result_from_AD1_works_while_external_mem_is_stalled
0001 b47d b000 f024 f066 9014 ffff ffff ffff
0004 00000005 00000000
0004 000003e8 00000000
0005 00000007
0004 000003e8 1f800000
0002 00000003
000F 00000005 1f800000
0000 TestMemXMov.test_that_mov_to_AD1_from_Result_works_while_external_mem_is_stalled
0001 b47d b000 f024 b3f0 f085 ffff ffff ffff
0004 00000005 00000000
0004 000003e8 00000000
0005 0000000a
0002 00000002
000F 000003e8 1f800000
0000 TestMemXMov.test_that_change_AD1_is_blocked_while_external_mem_is_in_progress
0001 b47d b000 f024 b3f0 f085 f024 ffff ffff ffff
0004 00000005 00000000
0004 000003e8 00000000
0002 00000006
0005 00000004
0002 00000002
000F 000003e8 1f800000
0000 TestMemXOp.test_that_sub_AD1_from_Result_works
0001 b47d b000 f024 b3f0 c065 9014 ffff ffff ffff
0004 000003e8 87000000
0004 00000005 00000000
0002 00000009
000F 00000005 20268000
0000 TestMemXOp.test_that_sub_AD1_from_AD0_works
0001 b140 f004 b47d b000 f024 c066 9014 ffff ffff ffff
0004 0000000a 1f800000
0004 000003e8 87000000
0004 00000005 00000000
0002 0000000b
000F 00000005 20268000
0000 TestMemXOp.test_that_sub_AD1_from_Result_with_inc_works
0001 b47d b000 f024 b3f0 c075 f085 ffff ffff ffff
0004 000003e8 87000000
0004 000003e9 00000000
0002 00000009
000F 000003e9 20268000
0000 TestMemXOp.test_that_sub_AD1_from_AD0_with_inc_works
0001 b140 f004 b47d b000 f024 c076 f085 ffff ffff ffff
0004 0000000a 1f800000
0004 000003e8 87000000
0004 000003e9 00000000
0002 0000000b
000F 000003e9 20268000
0000 TestMemXOp.test_that_sub_AD1_from_AD0_stalls_while_external_write_is_in_progress
0001 b140 f004 b47d b000 f024 b8e0 f085 c076 f085 ffff ffff ffff
0004 0000000a 1f800000
0004 000003e8 00000000
0004 000003e9 00000000
0002 0000000d
000F 000003e9 20268000
0000 TestMemXOp.test_that_sub_AD1_from_AD0_stalls_while_external_mem_is_stalled
0001 b140 f004 b47d b000 f024 c076 f085 ffff ffff ffff
0004 0000000a 1f800000
0004 00000005 00000000
0004 000003e8 00000000
0005 00000009
0004 000003e8 87000000
0002 00000004
000F 000003e9 20268000
0000 TestMov.testMovToAD0RegFromResult
0001 b140 f004 b3e2 f080 ffff ffff ffff
0004 0000000a 00000000
0002 00000006
000F 0000000a 1f100000
0000 TestMov.testMovToAD1RegFromResult
0001 b140 f024 b3e2 f085 ffff ffff ffff
0004 0000000a 00000000
0002 00000006
000F 0000000a 1f100000
0000 TestMov.MovToAD0FromResultAndInc
0001 b140 f004 b3e2 f090 f080 ffff ffff ffff
0004 0000000a 00000000
0004 0000000b 00000000
0002 00000007
000F 0000000a 1f100000
000F 0000000b 1f100000
0000 TestMov.MovToAD1FromResultAndInc
0001 b140 f024 b3e2 f095 f085 ffff ffff ffff
0004 0000000a 00000000
0004 0000000a 00000000
0002 00000007
000F 0000000a 1f100000
000F 0000000b 1f100000
0000 TestMov.testMovToAD0FromResultStallsWhenAD0IsWrittenBefore
0001 b120 f004 f090 f080 f080 ffff ffff ffff
0004 00000009 00000000
0004 0000000a 00000000
0004 0000000b 00000000
0002 00000008
000F 00000009 09000000
000F 0000000a 09000000
000F 0000000b 00000000
0000 TestMov.testMovToAD1FromResultStallsWhenAD1IsWrittenBefore
0001 b120 f024 f095 f085 f085 ffff ffff ffff
0004 00000009 00000000
0004 0000000a 00000000
0004 0000000b 00000000
0002 00000008
000F 00000009 09000000
000F 0000000a 09000000
000F 0000000b 00000000
0000 TestMov.testMovToAD0FromResultDoesNotStallWhenAD1IsWrittenBefore
0001 b120 f004 f024 f090 f080 ffff ffff ffff
0004 00000009 00000000
0004 0000000a 00000000
0002 00000007
000F 00000009 09000000
000F 0000000a 09000000
0000 TestMov.testMovToAD1FromResultDoesNotStallWhenAD0IsWrittenBefore
0001 b120 f024 f004 f095 f085 ffff ffff ffff
0004 00000009 00000000
0004 0000000a 00000000
0002 00000007
000F 00000009 09000000
000F 0000000a 09000000
0000 TestMov.test_that_mov_to_Result_from_AD0_works_and_expect_stall
0001 b120 f004 f062 9014 ffff ffff ffff
0004 00000005 00000000
0004 00000009 80400000
0002 00000007
000F 00000005 80400000
0000 TestMov.test_that_mov_to_Result_from_AD0_with_inc_works_and_expect_stall
0001 b120 f004 f072 f080 f080 ffff ffff ffff
0004 00000009 80400000
0004 0000000a 00000000
0004 0000000b 00000000
0002 00000008
000F 0000000a 80400000
000F 0000000b 00000000
0000 TestMov.test_that_mov_to_Result_from_AD1_works_and_expect_stall
0001 b120 f024 f066 9014 ffff ffff ffff
0004 00000005 00000000
0004 00000009 80400000
0002 00000007
000F 00000005 80400000
0000 TestMov.test_that_mov_to_Result_from_AD1_with_inc_works_and_expect_stall
0001 b120 f024 f076 f085 f085 ffff ffff ffff
0004 00000009 80400000
0004 0000000a 00000000
0004 0000000b 00000000
0002 00000008
000F 0000000a 80400000
000F 0000000b 00000000
0000 TestMov.test_that_mov_to_Result_from_AD0_works_and_does_not_stall_when_AD1_is_written_before
0001 b120 f004 f024 f072 f080 f080 ffff ffff ffff
0004 00000009 80400000
0004 0000000a 00000000
0004 0000000b 00000000
0002 00000008
000F 0000000a 80400000
000F 0000000b 00000000
0000 TestMov.test_that_mov_to_Result_from_AD1_works_and_does_not_stall_when_AD0_is_written_before
0001 b120 f024 f004 f076 f085 f085 ffff ffff ffff
0004 00000009 80400000
0004 0000000a 00000000
0004 0000000b 00000000
0002 00000008
000F 0000000a 80400000
000F 0000000b 00000000
0000 TestMov.test_that_mov_to_Result_from_IRS_works
0001 8017 9018 ffff ffff ffff
0004 00000005 80400000
0004 00000006 00000000
0002 00000004
000F 00000006 80400000
0000 TestMov.test_that_mov_to_IRS_from_Result_works
0001 b808 9014 ffff ffff ffff
0004 00000005 00000000
0002 00000004
000F 00000005 80400000
0000 TestNeg.test_that_negate_Result_works
0001 bb10 f100 9014 ffff ffff ffff
0004 00000005 00000000
0002 00000005
000F 00000005 18800000
0000 TestOp.testOpWithOperandsResultAndIRS
0001 bb10 3015 9018 ffff ffff ffff
0004 00000005 07000000
0004 00000006 00000000
0002 00000007
000F 00000006 9f800000
0000 TestOp.testOpWithOperandsResultAndDATA0
0001 b140 f004 bb10 c061 f080 ffff ffff ffff
0004 0000000a 07000000
0002 00000008
000F 0000000a 9f800000
0000 TestOp.testOpWithOperandsResultAndDATA0AndIncAddr
0001 b140 f004 bb10 c071 f080 ffff ffff ffff
0004 0000000a 07000000
0004 0000000b 00000000
0002 00000008
000F 0000000b 9f800000
0000 TestOp.testOpWithOperandsResultAndDATA1
0001 b140 f024 bb10 c065 f085 ffff ffff ffff
0004 0000000a 07000000
0002 00000008
000F 0000000a 9f800000
0000 TestOp.testOpWithOperandsResultAndDATA1AndIncAddr
0001 b140 f024 bb10 c075 f085 ffff ffff ffff
0004 0000000a 07000000
0004 0000000b 00000000
0002 00000008
000F 0000000b 9f800000
0000 TestOp.testOpWithOperandsDATA0WithAddrIncAndIRS
0001 b140 f004 3816 f080 ffff ffff ffff
0004 00000005 07000000
0004 0000000a 98800000
0004 0000000b 00000000
0002 00000008
000F 0000000b 9f800000
0000 TestOp.testOpWithOperandsDATA1WithAddrIncAndIRS
0001 b140 f024 3817 f085 ffff ffff ffff
0004 00000005 98800000
0004 0000000a 07000000
0004 0000000b 00000000
0002 00000008
000F 0000000b 1f800000
0000 TestOp.testOpWithTwoMemoryOperandsAndNoIncExpectStall1
0001 b140 f004 b280 f024 c066 9014 ffff ffff ffff
0004 00000005 00000000
0004 0000000a 98800000
0004 00000014 07000000
0002 0000000a
000F 00000005 9f800000
0000 TestOp.testOpWithTwoMemoryOperandsAndNoIncExpectStall2
0001 b140 f004 b280 f024 c063 9014 ffff ffff ffff
0004 00000005 00000000
0004 0000000a 07000000
0004 00000014 98800000
0002 0000000a
000F 00000005 9f800000
0000 TestOp.testOpWithMemoryAndIRSWithNoIncExpectStall
0001 b140 f004 3016 f080 ffff ffff ffff
0004 00000005 07000000
0004 0000000a 98800000
0002 00000008
000F 0000000a 9f800000
0000 TestOp.testOpWithResultAndMemoryWithNoIncExpectStall
0001 b140 f004 c061 f080 ffff ffff ffff
0004 0000000a 98800000
0002 00000008
000F 0000000a 20228000
0000 TestOp.testOpWithTwoMemoryOperandsAndIncOpA
0001 b140 f004 b280 f024 c163 f080 f085 ffff ffff ffff
0004 0000000a 07000000
0004 00000014 98800000
0004 00000015 00000000
0002 0000000b
000F 0000000a 9f800000
000F 00000015 9f800000
0000 TestOp.testOpWithTwoMemoryOperandsAndIncOpB
0001 b140 f004 b280 f024 c073 f080 f085 ffff ffff ffff
0004 0000000a 07000000
0004 00000014 98800000
0004 0000000b 00000000
0002 0000000b
000F 0000000b 9f800000
000F 00000014 9f800000
0000 TestOp.testOpWithTwoMemoryOperandsAndIncBoth
0001 b140 f004 b280 f024 c173 f080 f085 ffff ffff ffff
0004 0000000a 07000000
0004 00000014 98800000
0004 0000000b 00000000
0004 00000015 00000000
0002 0000000b
000F 0000000b 9f800000
000F 00000015 9f800000
0000 TestOp.testOpAddition
0001 b0e0 2015 9018 ffff ffff ffff
0004 00000005 98800000
0004 00000006 00000000
0002 00000006
000F 00000006 91800000
0000 TestOp.testOpSubstract
0001 b0e0 3015 9018 ffff ffff ffff
0004 00000005 98800000
0004 00000006 00000000
0002 00000006
000F 00000006 1f800000
0000 TestOp.testOpMultiply
0001 b0e0 4015 9018 ffff ffff ffff
0004 00000005 98800000
0004 00000006 00000000
0002 00000007
000F 00000006 a0ab8000
0000 TestOp.testOpDivide
0001 b0e0 5015 9018 ffff ffff ffff
0004 00000005 98800000
0004 00000006 00000000
0002 00000024
000F 00000006 80492492
